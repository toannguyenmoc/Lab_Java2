/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Lab_4;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ToanNM_PC09504
 */
public class Bai_2 extends javax.swing.JFrame {

    DefaultTableModel model = new DefaultTableModel();
    Connection ketNoi;

    /**
     * Creates new form Bai_2
     */
    public Bai_2() throws ClassNotFoundException, SQLException {
        initComponents();
        setTitle("Quản Lý Users");
        DatTenCot();
        DoDuLieuLenBang();
        btnCapNhat.setEnabled(false);
        btnXoa.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDanhSach = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        rdoNam = new javax.swing.JRadioButton();
        txtMaSV = new javax.swing.JTextField();
        rdoNu = new javax.swing.JRadioButton();
        txtHoTen = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnCapNhat = new javax.swing.JButton();
        btnLamMoi = new javax.swing.JButton();
        txtEmail = new javax.swing.JTextField();
        txtSoDT = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDiaChi = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnStart = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnEnd = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel4.setText("Email :");

        tblDanhSach.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "MaSV", "HoTen", "Email", "SoDT", "GioiTinh", "DiaChi"
            }
        ));
        tblDanhSach.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDanhSachMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblDanhSach);

        jLabel5.setText("Số ĐT :");

        buttonGroup1.add(rdoNam);
        rdoNam.setText("Nam");

        buttonGroup1.add(rdoNu);
        rdoNu.setText("Nữ");

        jPanel1.setLayout(new java.awt.GridLayout(0, 1, 0, 15));

        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Add.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        jPanel1.add(btnThem);

        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Delete.png"))); // NOI18N
        btnXoa.setText("Xoá");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        jPanel1.add(btnXoa);

        btnCapNhat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Edit.png"))); // NOI18N
        btnCapNhat.setText("Cập Nhật");
        btnCapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatActionPerformed(evt);
            }
        });
        jPanel1.add(btnCapNhat);

        btnLamMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/List.png"))); // NOI18N
        btnLamMoi.setText("Làm Mới");
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });
        jPanel1.add(btnLamMoi);

        jLabel6.setText("Giới Tính :");

        jLabel7.setText("Địa Chỉ :");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 255));
        jLabel1.setText("QUẢN LÝ USERS");

        jLabel2.setText("Mã SV :");

        txtDiaChi.setColumns(20);
        txtDiaChi.setRows(5);
        jScrollPane1.setViewportView(txtDiaChi);

        jLabel3.setText("Họ Tên :");

        jPanel2.setLayout(new java.awt.GridLayout(1, 0, 25, 0));

        btnStart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icons8-skip-to-start-48.png"))); // NOI18N
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });
        jPanel2.add(btnStart);

        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icons8-rewind-48.png"))); // NOI18N
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        jPanel2.add(btnBack);

        btnNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icons8-fast-forward-48.png"))); // NOI18N
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });
        jPanel2.add(btnNext);

        btnEnd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icons8-end-48.png"))); // NOI18N
        btnEnd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEndActionPerformed(evt);
            }
        });
        jPanel2.add(btnEnd);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(297, 297, 297)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6))
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtMaSV)
                            .addComponent(txtHoTen)
                            .addComponent(txtEmail)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rdoNam, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(rdoNu, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 284, Short.MAX_VALUE)
                            .addComponent(txtSoDT))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(138, 138, 138))
            .addComponent(jScrollPane2)
            .addGroup(layout.createSequentialGroup()
                .addGap(137, 137, 137)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtMaSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtSoDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(rdoNam)
                            .addComponent(rdoNu))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        
        try {
            if (check()) {
                if (tblDanhSach.getRowCount() > 0) {
                    for (int i = 0; i < tblDanhSach.getRowCount(); i++) {
                        if (txtMaSV.getText().equalsIgnoreCase(tblDanhSach.getValueAt(i, 0).toString())) {
                            JOptionPane.showMessageDialog(this, "Trùng Mã Sinh Viên");
                            return;
                        }
                    }
                    KetNoiCSDL();
                    String sql = "INSERT INTO SinhVien VALUES(?,?,?,?,?,?)";
                    PreparedStatement cauLenh = ketNoi.prepareStatement(sql);
                    cauLenh.setString(1, txtMaSV.getText());
                    cauLenh.setString(2, txtHoTen.getText());
                    cauLenh.setString(3, txtEmail.getText());
                    cauLenh.setString(4, txtSoDT.getText());
                    if (rdoNam.isSelected()) {
                        cauLenh.setString(5, "True");
                    } else if (rdoNu.isSelected()) {
                        cauLenh.setString(5, "False");
                    }
                    cauLenh.setString(6, txtDiaChi.getText());

                    cauLenh.executeUpdate();
                    ketNoi.close();
                    DoDuLieuLenBang();
                }
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Bai_2.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Bai_2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        try {
            if (tblDanhSach.getSelectedRow() == -1 ) {
                JOptionPane.showMessageDialog(this, "Bạn Chưa Chọn Dòng để xoá");
            } else {
                KetNoiCSDL();
                String sql = "DELETE SinhVien WHERE MaSV = ?";
                PreparedStatement cauLenh = ketNoi.prepareStatement(sql);
                cauLenh.setString(1, txtMaSV.getText());
                // Ban chac chan muon xoa khong
                int kq = JOptionPane.showConfirmDialog(this, "Bạn Chắc Chắn Xoá");
                if (kq == JOptionPane.YES_OPTION) {
                    cauLenh.executeUpdate();
                    ketNoi.close();
                    DoDuLieuLenBang();
                }
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Bai_2.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Bai_2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void tblDanhSachMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDanhSachMouseClicked
        btnCapNhat.setEnabled(true);
        btnXoa.setEnabled(true);
        DanhSach();
    }//GEN-LAST:event_tblDanhSachMouseClicked

    private void btnCapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatActionPerformed
        try {
            if (tblDanhSach.getSelectedRow() == -1 ) {
                JOptionPane.showMessageDialog(this, "Bạn Chưa Chọn Dòng để Cập Nhật");
            } else{
                KetNoiCSDL();
                String sql = "UPDATE SinhVien SET HoTen = ?, Email = ?, SoDT = ?, GioiTinh = ?, DiaChi = ? WHERE MaSV = ?";
                PreparedStatement cauLenh = ketNoi.prepareStatement(sql);
                cauLenh.setString(1, txtHoTen.getText());
                cauLenh.setString(2, txtEmail.getText());
                cauLenh.setString(3, txtSoDT.getText());
                if (rdoNam.isSelected()) {
                    cauLenh.setString(4, "True");
                } else if (rdoNu.isSelected()) {
                    cauLenh.setString(4, "False");
                }
                cauLenh.setString(5, txtDiaChi.getText());
                cauLenh.setString(6, txtMaSV.getText());
                cauLenh.executeUpdate();
                ketNoi.close();
                DoDuLieuLenBang();
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Bai_2.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Bai_2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnCapNhatActionPerformed

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        txtMaSV.setText("");
        txtHoTen.setText("");
        txtEmail.setText("");
        txtDiaChi.setText("");
        buttonGroup1.clearSelection();
        txtSoDT.setText("");
        txtMaSV.setEditable(true);
        btnCapNhat.setEnabled(false);
        btnXoa.setEnabled(false);
    }//GEN-LAST:event_btnLamMoiActionPerformed

    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
        btnCapNhat.setEnabled(true);
        btnXoa.setEnabled(true);
        tblDanhSach.setRowSelectionInterval(0, 0);
        txtMaSV.setText(tblDanhSach.getValueAt(0, 0).toString());
        txtMaSV.setEditable(false);
        txtHoTen.setText(tblDanhSach.getValueAt(0, 1).toString());
        txtEmail.setText(tblDanhSach.getValueAt(0, 2).toString());
        txtSoDT.setText(tblDanhSach.getValueAt(0, 3).toString());
        String gt = tblDanhSach.getValueAt(0, 4).toString();
        if (gt.equalsIgnoreCase("true")) {
            rdoNam.setSelected(true);
        } else {
            rdoNu.setSelected(true);
        }
        txtDiaChi.setText(tblDanhSach.getValueAt(0, 5).toString());
        btnStart.setEnabled(false);
        btnBack.setEnabled(false);
        btnNext.setEnabled(true);
        btnEnd.setEnabled(true);
    }//GEN-LAST:event_btnStartActionPerformed

    private void btnEndActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEndActionPerformed
        btnCapNhat.setEnabled(true);
        btnXoa.setEnabled(true);
        int soDong = tblDanhSach.getRowCount();
        if (soDong > 0) {
            tblDanhSach.setRowSelectionInterval(soDong - 1, soDong - 1);
            DanhSach();
            btnEnd.setEnabled(false);
            btnNext.setEnabled(false);
            btnStart.setEnabled(true);
            btnBack.setEnabled(true);
        }
    }//GEN-LAST:event_btnEndActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        btnCapNhat.setEnabled(true);
        btnXoa.setEnabled(true);
        int index = tblDanhSach.getSelectedRow();
        if (index < tblDanhSach.getRowCount() - 1) {
            tblDanhSach.setRowSelectionInterval(index + 1, index + 1);
            DanhSach();
            btnStart.setEnabled(true);
            btnBack.setEnabled(true);
        }
        if (index == tblDanhSach.getRowCount() - 1) {
            btnNext.setEnabled(false);
            btnEnd.setEnabled(false);
        }
    }//GEN-LAST:event_btnNextActionPerformed
    public void DanhSach() {
        int viTri = tblDanhSach.getSelectedRow();
        txtMaSV.setText(tblDanhSach.getValueAt(viTri, 0).toString());
        txtMaSV.setEditable(false);
        txtHoTen.setText(tblDanhSach.getValueAt(viTri, 1).toString());
        txtEmail.setText(tblDanhSach.getValueAt(viTri, 2).toString());
        txtSoDT.setText(tblDanhSach.getValueAt(viTri, 3).toString());
        String gt = tblDanhSach.getValueAt(viTri, 4).toString();
        if (gt.equalsIgnoreCase("true")) {
            rdoNam.setSelected(true);
        } else {
            rdoNu.setSelected(true);
        }
        txtDiaChi.setText(tblDanhSach.getValueAt(viTri, 5).toString());
    }

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        btnCapNhat.setEnabled(true);
        btnXoa.setEnabled(true);
        int index = tblDanhSach.getSelectedRow();

        if (index > 0) {
            tblDanhSach.setRowSelectionInterval(index - 1, index - 1);
            DanhSach();
            btnEnd.setEnabled(true);
            btnNext.setEnabled(true);
        } else if (index == 0) {
            tblDanhSach.setRowSelectionInterval(0, 0);
            btnStart.setEnabled(false);
            btnBack.setEnabled(false);

        } else {
            tblDanhSach.setRowSelectionInterval(tblDanhSach.getRowCount() - 1, tblDanhSach.getRowCount() - 1);
            DanhSach();
            btnEnd.setEnabled(true);
            btnNext.setEnabled(true);
        }
    }//GEN-LAST:event_btnBackActionPerformed

    public void DatTenCot() {
        model.addColumn("MSSV");
        model.addColumn("Họ Tên");
        model.addColumn("Email");
        model.addColumn("Số Điện Thoại");
        model.addColumn("Giới Tính");
        model.addColumn("Địa Chỉ");

        tblDanhSach.setModel(model);
    }

    public boolean check() {
        String mauMaSV = "[a-zA-Z]{2}[0-9]{3}";
        String mauTen = "^[\\p{L}]+(?: [\\p{L}]+)*$";
        String mauEmail_1 = "[a-zA-Z0-9]{4,50}@gmail.com";
        String mauEmail_2 = "[a-zA-Z0-9]{4,50}@fpt.edu.vn";
        String mauSdt = "0[0-9]{9,11}";
        if (txtMaSV.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập Mã Sinh Viên");
            return false;
        }
        if (!txtMaSV.getText().matches(mauMaSV)) {
            JOptionPane.showMessageDialog(this, "Mã Sinh Viên Không Đúng Định Dạng");
            txtMaSV.requestFocus();
            return false;
        }
        if (txtHoTen.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập Họ Tên");
            return false;
        }
        if (!txtHoTen.getText().matches(mauTen)) {
            JOptionPane.showMessageDialog(this, "Họ Tên Không Đúng Định Dạng");
            txtHoTen.requestFocus();
            return false;
        }
        if (txtEmail.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập Email");
            return false;
        }
        if (!txtEmail.getText().matches(mauEmail_1) && !txtEmail.getText().matches(mauEmail_2)) {
            JOptionPane.showMessageDialog(this, "Email Không Đúng Định Dạng");
            txtEmail.requestFocus();
            return false;
        }
        if (txtSoDT.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập Số Điện Thoại");
            return false;
        }
        if (!txtSoDT.getText().matches(mauSdt)) {
            JOptionPane.showMessageDialog(this, "SĐT Không Đúng Định Dạng");
            txtSoDT.requestFocus();
            return false;
        }
        if (buttonGroup1.getSelection() == null) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn Giới Tính");
            return false;
        }
        if (txtDiaChi.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập Địa Chỉ");
            return false;
        }
        return true;
    }

    public void KetNoiCSDL() throws ClassNotFoundException, SQLException {
        Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
        String url = "jdbc:sqlserver://localhost:1433; databaseName = QLUS";
        String user = "sa";
        String pass = "123456";
        ketNoi = DriverManager.getConnection(url, user, pass);
    }

    public void DoDuLieuLenBang() throws ClassNotFoundException, SQLException {
        model.setRowCount(0);
        KetNoiCSDL();
        String sql = "SELECT * FROM SinhVien";
        PreparedStatement cauLenh = ketNoi.prepareStatement(sql);
        ResultSet ketQua = cauLenh.executeQuery();
        while (ketQua.next() == true) {
            String MaSV = ketQua.getString(1);
            String HoTen = ketQua.getString(2);
            String Email = ketQua.getString(3);
            String SoDT = ketQua.getString(4);
            boolean GioiTinh = ketQua.getBoolean(5);
            String DiaChi = ketQua.getString(6);

            model.addRow(new Object[]{MaSV, HoTen, Email, SoDT, GioiTinh, DiaChi});
        }
        ketNoi.close();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Bai_2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Bai_2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Bai_2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Bai_2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Bai_2().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Bai_2.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(Bai_2.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCapNhat;
    private javax.swing.JButton btnEnd;
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnStart;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JRadioButton rdoNam;
    private javax.swing.JRadioButton rdoNu;
    private javax.swing.JTable tblDanhSach;
    private javax.swing.JTextArea txtDiaChi;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtHoTen;
    private javax.swing.JTextField txtMaSV;
    private javax.swing.JTextField txtSoDT;
    // End of variables declaration//GEN-END:variables

    private void display(int Current) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
